version: "2.4"

volumes:
  postgres_data: {}
  media_data: {}
  static_data: {}

services:
  postgres:
    image: postgres:10.5-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./server/.env
    healthcheck:
      test: "PGPASSWORD=vteme psql --host 127.0.0.1 --dbname vteme_staging_db --username vteme --quiet --no-align --tuples-only -c 'SELECT 1;'"
      interval: 30s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.7.14-alpine
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      timeout: 5s
      interval: 5s
      retries: 5

  django-base: &django-base
    build:
      context: ./server
      dockerfile: ./compose/Dockerfile
    env_file:
      - ./server/.env
    volumes:
      - ./server:/app/server
      - media_data:/app/server/config/server_media
      - static_data:/app/server/config/server_static
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  celeryworker:
    <<: *django-base
    command: celery -A config worker -l INFO --purge

  celerybeat:
    <<: *django-base
    command: celery -A config beat -l INFO

  django:
    <<: *django-base
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      celeryworker:
        condition: service_started
      celerybeat:
        condition: service_started
    healthcheck:
      test: "curl --fail localhost:8000/api/doc || exit 1"
      interval: 5s
      timeout: 10s
      retries: 5
    command: ./compose/start.sh

  sockjs:
    build:
      context: ./sockjs
      dockerfile: ./compose/Dockerfile
    volumes:
      - ./sockjs:/app/sockjs
    env_file:
      - ./sockjs/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ./compose/start.sh

  react:
    build:
      context: ./client/
      dockerfile: ./compose/Dockerfile.staging
    volumes:
      - .:/app/client
      - media_data:/app/server/config/server_media
      - static_data:/app/server/config/server_static
    env_file:
      - ./client/.env
    depends_on:
      django:
        condition: service_healthy
      sockjs:
        condition: service_started
    ports:
      - "8080:80"
